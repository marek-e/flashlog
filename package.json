{
  "name": "flashlog",
  "displayName": "FlashLog",
  "description": "One-shortcut logging and cleanup. Insert smart, language-aware logs instantly, then wipe them out in a flash.",
  "keywords": [
    "log",
    "debug",
    "logging",
    "debugging",
    "logging",
    "debugging",
    "fast",
    "polyglot",
    "flash",
    "cleanup"
  ],
  "author": "Marek Elmayan <melmayan.dev@gmail.com>",
  "homepage": "https://github.com/marek-e/flashlog#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/marek-e/flashlog.git"
  },
  "license": "MIT",
  "version": "0.0.1",
  "publisher": "melmayan",
  "icon": "icon.png",
  "engines": {
    "vscode": "^1.103.0"
  },
  "categories": [
    "Logging",
    "Debuggers",
    "Other"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "flashlog.insertLog",
        "title": "FlashLog: Insert Log"
      },
      {
        "command": "flashlog.removeLogs",
        "title": "FlashLog: Remove Logs in File"
      }
    ],
    "keybindings": [
      {
        "command": "flashlog.insertLog",
        "key": "ctrl+alt+l",
        "mac": "ctrl+alt+l",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "flashlog.removeLogs",
        "key": "ctrl+alt+shift+l",
        "mac": "ctrl+alt+shift+l",
        "when": "editorTextFocus && !editorReadonly"
      }
    ],
    "configuration": {
      "title": "FlashLog",
      "properties": {
        "flashlog.insertPosition": {
          "type": "string",
          "enum": [
            "nextLine",
            "sameLineEnd"
          ],
          "default": "nextLine",
          "description": "Where to insert the log."
        },
        "flashlog.includeFileLine": {
          "type": "boolean",
          "default": true,
          "description": "Include filename:line in label."
        },
        "flashlog.labelFormat": {
          "type": "string",
          "default": "${name}",
          "description": "Label format (supports ${name})."
        },
        "flashlog.languageTemplates": {
          "type": "object",
          "default": {
            "javascript": "console.log('${label}:', ${expr}); // FLASHLOG⚡️",
            "typescript": "console.log('${label}:', ${expr}); // FLASHLOG⚡️",
            "python": "print(f\"{label}: {${expr}}\")  # FLASHLOG⚡️",
            "rust": "println!(\"{label}: {}\", ${expr}); // FLASHLOG⚡️",
            "go": "fmt.Printf(\"{label}: %v\\n\", ${expr}); // FLASHLOG⚡️",
            "java": "System.out.println(\"{label}: \" + ${expr}); // FLASHLOG⚡️",
            "php": "echo \"{label}: \" . ${expr} . \"\\n\"; // FLASHLOG⚡️",
            "ruby": "puts \"{label}: #{${expr}}\" # FLASHLOG⚡️",
            "kotlin": "println(\"{label}: ${expr}\") // FLASHLOG⚡️",
            "elixir": "IO.puts(\"{label}: {${expr}}\") # FLASHLOG⚡️",
            "erlang": "io:format(\"{label}: ~p~n\", [${expr}]), // FLASHLOG⚡️",
            "csharp": "Console.WriteLine(\"{label}: {}\", ${expr}); // FLASHLOG⚡️",
            "lua": "print(\"{label}: \" .. ${expr}) -- FLASHLOG⚡️",
            "haskell": "putStrLn (\"{label}: \" ++ show ${expr}) -- FLASHLOG⚡️",
            "scala": "println(\"{label}: \" + ${expr}) // FLASHLOG⚡️",
            "dart": "print('${label}: ${expr}'); // FLASHLOG⚡️",
            "c": "printf(\"{label}: %d\\n\", ${expr}); // FLASHLOG⚡️",
            "cpp": "std::cout << \"{label}: \" << ${expr} << std::endl; // FLASHLOG⚡️"
          },
          "description": "Per-language template. Use ${label} and ${expr}."
        },
        "flashlog.genericTemplate": {
          "type": "string",
          "default": "// ${label}: ${expr} // FLASHLOG⚡️",
          "description": "Fallback template."
        },
        "flashlog.removePattern": {
          "type": "string",
          "default": "FLASHLOG⚡️",
          "description": "Marker to find/remove logs."
        }
      }
    }
  },
  "scripts": {
    "compile": "tsc -p ./",
    "watch": "tsc -w -p ./",
    "package": "vsce package",
    "publish:vscode": "vsce publish",
    "publish:ovsx": "ovsx publish -p $OVSX_PAT"
  },
  "devDependencies": {
    "@types/vscode": "^1.103.0",
    "@vscode/vsce": "^3.6.0",
    "ovsx": "^0.10.5",
    "typescript": "^5.9.2"
  }
}